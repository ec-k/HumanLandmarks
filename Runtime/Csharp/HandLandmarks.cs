// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hand_landmarks.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HumanLandmarks {

  /// <summary>Holder for reflection information generated from hand_landmarks.proto</summary>
  public static partial class HandLandmarksReflection {

    #region Descriptor
    /// <summary>File descriptor for hand_landmarks.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HandLandmarksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRoYW5kX2xhbmRtYXJrcy5wcm90bxIOaHVtYW5MYW5kbWFya3MaDmxhbmRt",
            "YXJrLnByb3RvItADCg1IYW5kTGFuZG1hcmtzEisKCWxhbmRtYXJrcxgBIAMo",
            "CzIYLmh1bWFuTGFuZG1hcmtzLkxhbmRtYXJrIpEDCg1MYW5kbWFya0luZGV4",
            "EgkKBXdyaXN0EAASDAoIdGh1bWJDTUMQARIMCgh0aHVtYk1DUBACEgsKB3Ro",
            "dW1iSVAQAxIMCgh0aHVtYlRJUBAEEhIKDmluZGV4RmluZ2VyTUNQEAUSEgoO",
            "aW5kZXhGaW5nZXJQSVAQBhISCg5pbmRleEZpbmdlckRJUBAHEhIKDmluZGV4",
            "RmluZ2VyVElQEAgSEwoPbWlkZGxlRmluZ2VyTUNQEAkSEwoPbWlkZGxlRmlu",
            "Z2VyUElQEAoSEwoPbWlkZGxlRmluZ2VyRElQEAsSEwoPbWlkZGxlRmluZ2Vy",
            "VElQEAwSEQoNcmluZ0Zpbmdlck1DUBANEhEKDXJpbmdGaW5nZXJQSVAQDhIR",
            "Cg1yaW5nRmluZ2VyRElQEA8SEQoNcmluZ0ZpbmdlclRJUBAQEgwKCHBpbmt5",
            "TUNQEBESDAoIcGlua3lQSVAQEhIMCghwaW5reURJUBATEgwKCHBpbmt5VElQ",
            "EBQSFgoSaGFuZExhbmRtYXJrTGVuZ3RoEBViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HumanLandmarks.LandmarkReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HumanLandmarks.HandLandmarks), global::HumanLandmarks.HandLandmarks.Parser, new[]{ "Landmarks" }, null, new[]{ typeof(global::HumanLandmarks.HandLandmarks.Types.LandmarkIndex) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HandLandmarks : pb::IMessage<HandLandmarks>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandLandmarks> _parser = new pb::MessageParser<HandLandmarks>(() => new HandLandmarks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandLandmarks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HumanLandmarks.HandLandmarksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandLandmarks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandLandmarks(HandLandmarks other) : this() {
      landmarks_ = other.landmarks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandLandmarks Clone() {
      return new HandLandmarks(this);
    }

    /// <summary>Field number for the "landmarks" field.</summary>
    public const int LandmarksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HumanLandmarks.Landmark> _repeated_landmarks_codec
        = pb::FieldCodec.ForMessage(10, global::HumanLandmarks.Landmark.Parser);
    private readonly pbc::RepeatedField<global::HumanLandmarks.Landmark> landmarks_ = new pbc::RepeatedField<global::HumanLandmarks.Landmark>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HumanLandmarks.Landmark> Landmarks {
      get { return landmarks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandLandmarks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandLandmarks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!landmarks_.Equals(other.landmarks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= landmarks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      landmarks_.WriteTo(output, _repeated_landmarks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      landmarks_.WriteTo(ref output, _repeated_landmarks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += landmarks_.CalculateSize(_repeated_landmarks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandLandmarks other) {
      if (other == null) {
        return;
      }
      landmarks_.Add(other.landmarks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landmarks_.AddEntriesFrom(input, _repeated_landmarks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            landmarks_.AddEntriesFrom(ref input, _repeated_landmarks_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the HandLandmarks message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum LandmarkIndex {
        [pbr::OriginalName("wrist")] Wrist = 0,
        [pbr::OriginalName("thumbCMC")] ThumbCmc = 1,
        [pbr::OriginalName("thumbMCP")] ThumbMcp = 2,
        [pbr::OriginalName("thumbIP")] ThumbIp = 3,
        [pbr::OriginalName("thumbTIP")] ThumbTip = 4,
        [pbr::OriginalName("indexFingerMCP")] IndexFingerMcp = 5,
        [pbr::OriginalName("indexFingerPIP")] IndexFingerPip = 6,
        [pbr::OriginalName("indexFingerDIP")] IndexFingerDip = 7,
        [pbr::OriginalName("indexFingerTIP")] IndexFingerTip = 8,
        [pbr::OriginalName("middleFingerMCP")] MiddleFingerMcp = 9,
        [pbr::OriginalName("middleFingerPIP")] MiddleFingerPip = 10,
        [pbr::OriginalName("middleFingerDIP")] MiddleFingerDip = 11,
        [pbr::OriginalName("middleFingerTIP")] MiddleFingerTip = 12,
        [pbr::OriginalName("ringFingerMCP")] RingFingerMcp = 13,
        [pbr::OriginalName("ringFingerPIP")] RingFingerPip = 14,
        [pbr::OriginalName("ringFingerDIP")] RingFingerDip = 15,
        [pbr::OriginalName("ringFingerTIP")] RingFingerTip = 16,
        [pbr::OriginalName("pinkyMCP")] PinkyMcp = 17,
        [pbr::OriginalName("pinkyPIP")] PinkyPip = 18,
        [pbr::OriginalName("pinkyDIP")] PinkyDip = 19,
        [pbr::OriginalName("pinkyTIP")] PinkyTip = 20,
        [pbr::OriginalName("handLandmarkLength")] HandLandmarkLength = 21,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
